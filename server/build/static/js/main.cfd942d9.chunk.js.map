{"version":3,"sources":["pages/home.js","pages/Auth/styles.js","constants/index.js","utils/axios.js","api/auth.js","pages/Auth/Auth.js","pages/Links/links.js","components/Tags/TagComponent.js","components/Map/MeasuringComponent.js","components/Map/MapComponent.js","components/Dropdown/DropdownComponent.js","pages/FindYourRun/findyourrun.js","api/bios.js","components/Bio/bio.js","components/popup-dialog/popup-dialog.js","components/Bio/popup.js","components/loading-animation/loading-animation.js","pages/MeetTheTeam/meetTheTeam.js","api/runs.js","pages/Create/create.js","components/RunDescription/run-description.js","components/rangeSlider/MultiRangeSlider.js","pages/Find/find.js","pages/Calendar/calendar.js","api/admin.js","components/NavBar-component/AdminPopup.js","components/NavBar-component/NavBar.js","App.js","index.js"],"names":["HomePage","navigate","useNavigate","className","Button","onClick","window","open","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","padding","root","margin","avatar","backgroundColor","palette","secondary","main","form","width","submit","googleButton","marginBottom","BACKEND_URL","api","axios","create","baseURL","withCredentials","user","a","method","url","login","accessToken","data","exp","Auth","classes","useStyles","useContext","UserContext","setUser","CookieContext","setCookie","cookies","useState","signInText","setsignInText","tokenResponse","access_token","then","res","message","token","path","result","catch","err","console","log","json","googleLogin","useGoogleLogin","onSuccess","Container","component","maxwidth","Paper","elevation","Avatar","Typography","varient","fullWidth","variant","color","Links","Array","waypointStyle","Style","image","Icon","anchor","src","scale","stopsStyle","CircleStyle","radius","fill","Fill","stroke","Stroke","completeStyle","lineDash","labelStyle","text","geometry","Text","font","backgroundFill","textBaseline","offsetY","getDistance","textAlign","offsetX","line","kmLength","getLength","Math","round","authentication","ApiKeyManager","fromKey","process","endptFeatureID","wayptFeatureID","MapComponent","forwardRef","ref","updateMap","editable","mapData","map","setMap","mapElement","useRef","VectorSource","format","GeoJSON","source","Feature","name","drawFeature","routeIDStack","totalWaypts","totalRoute","distance","useImperativeHandle","reset","clear","length","undoLine","startPt","getFeatureById","getGeometry","getCoordinates","waypts","pop","removeFeature","setGeometry","MultiPoint","routeID","calcDistance","dist","i","LineString","VectorLayer","style","feature","retStyle","get","push","Point","getFirstCoordinate","endPt","getLastCoordinate","label","mileLength","meterLength","feetLength","output","miles","parseFloat","toFixed","formatLength","vector","route","waypoints","flat","x","toLonLat","y","onDrawEnd","event","lastPt","pt1","pt2","newWaypt","setId","addFeature","solveRoute","stops","params","returnDirections","directionsLanguage","travelMode","response","resRoute","routes","geoJson","features","coordinates","fromLonLat","id","introduceData","points","coords","changed","endPointsGeometry","waypointsGeometry","setStyle","shift","endPoints","useEffect","draw","raster","TileLayer","OSM","_map","Map","target","current","layers","view","View","setView","center","zoom","Draw","type","on","addInteraction","getView","fit","getExtent","getSize","setZoom","getZoom","getInteractions","forEach","setActive","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","tags","getStyles","selectedArray","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","Dropdown","updateTags","useTheme","setSelectedArray","FormControl","sx","m","mt","Select","multiple","displayEmpty","value","onChange","split","input","OutlinedInput","renderValue","selected","join","inputProps","MenuItem","disabled","FindYourRun","updateBio","bio","deleteBio","_id","Bio","isEditing","setIsEditing","isAdmin","setisAdmin","isValid","setValid","picture","imageURL","setimageURL","title","email","photo","newBio","setnewBio","role","handleSubmit","e","preventDefault","retImageUrl","cloudinaryForm","FormData","append","post","dataRes","handleDelete","location","reload","handleChange","onSubmit","encType","defaultValue","placeholder","accept","files","PopUpDialog","handleClose","Dialog","onClose","DialogTitle","DialogActions","NewBioPopup","fname","setfname","femail","setfemail","ftitle","setftitle","ftext","setftext","addNewBio","LoadingAnimation","MeetTheTeam","bios","setBios","openNewBio","setopenNewBio","loading","setLoading","getBios","search","query","makeRun","run","CreateARun","mapRef_web","mapRef_mobile","tagsRef","showIcons","runRouteError","setRouteText","routeDrawn","setDrawn","mapContext","setMapContext","navigateToCreate","navigateToFind","validate","tmp","tags_","meta","RunDescription","description","setMapData","hasData","setHasData","tagsToString","loadRun","getRun","data_id","nums","MultiRangeSlider","min","max","minVal","setMinVal","maxVal","setMaxVal","minValRef","maxValRef","range","getPercent","useCallback","minPercent","maxPercent","left","toString","classnames","FindARun","runFindError","setFindText","runs","setRuns","runIndex","setRunIndex","curRun","setCurRun","searchable","minDistance","maxDistance","setQuery","isNaN","searchAPI","changeRun","next","IconButton","enabled","Calendar","height","frameborder","scrolling","AdminPopup","admins","setAdmins","getAdmins","grantAdmin","revokeAdmin","NavBar","handleClick","showLinks","setShowLinks","openPopup","setOpenPopup","href","createContext","App","useCookies","removeCookie","openDialog","setOpenDialog","logout","tokenLogin","resUser","auth","setTimeout","timeout","Provider","exact","element","to","ReactDOM","render","StrictMode","clientId","CookiesProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.cfd942d9.chunk.js","sourcesContent":["import React from 'react'\nimport '../styles/home.css'\nimport Button from '@material-ui/core/Button';\nimport {useNavigate} from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst HomePage = () => {\n\n  const navigate = useNavigate();\n\n  const addCalendar = () => {\n    window.open('https://calendar.google.com/calendar/u/2?cid=MjY0MGJlOWJjZDM5YmRjYjgxNDZhMTUwOGEyZDFmNGY3MGQxYzgxMzQ1ZDBkZDlhOTkzOWRmMmRjYmZmNTg2Y0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t', '_blank');\n  }\n\n  const navigateToMeetTheTeam = () => {\n    navigate('/meettheteam');\n  }\n  const navigateToFind = () => {\n    navigate('/find');\n  }\n  \n  return (\n    <div>\n      <div >\n        <div className=\"main-section\">\n          <h1 className=\"cover-heading\">WELCOME TO THE VANDY RUN CLUB</h1>\n          <h1 className=\"come-run\">Come run with us. No experience required.</h1>\n          <div className=\"meet-exec\">\n            <Button onClick={navigateToFind}>Ready to Start Running?</Button>\n            <Button onClick={navigateToMeetTheTeam}>Meet Our Exec Board!</Button>\n            <Button onClick={addCalendar}>Add our calendar to your gcal!</Button>\n          </div>\n        </div>\n      </div>\n     </div>\n  )\n}\n\nexport default HomePage;\n\n\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}));","// api url (where your server is hosted at)\nconst production = false;\n\nconst BACKEND_URL = production ? process.env.REACT_APP_BACKEND_URL : 'http://localhost:8080'\nconst IMAGE_UPLOAD_PRESET = 'ip5kvkrl'\n\nexport {\n  BACKEND_URL,\n  IMAGE_UPLOAD_PRESET\n}\n","import axios from 'axios'\nimport { BACKEND_URL } from '../constants'\n\n// axios configuration\nexport const api = axios.create({\n  baseURL: BACKEND_URL,\n  withCredentials: true\n})\n","import {api as axios} from '../utils/axios'\n\nexport async function user() {\n    return await axios({\n        method: \"GET\",\n        url: \"/account/user\"\n    })\n}\n\nexport async function login(accessToken) {\n    return await axios({\n        method: \"POST\",\n        url: \"/account/login\",\n        data: {accessToken}\n    })\n}\n\nexport async function exp() {\n    return await axios({\n        method: \"GET\",\n        url: \"/account/exp\"\n    })\n}\n\n","import { useContext, useState } from \"react\";\nimport useStyles from './styles';\nimport { login } from \"../../api/auth\";\nimport {logout} from \"../../api/auth\";\n\nimport {useGoogleLogin, useGoogleLogout} from '@react-oauth/google';\nimport { useNavigate } from \"react-router-dom\"\n\n\nimport { Avatar, Button, Paper, Typography, Container } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\nimport { UserContext } from '../../App'\nimport { CookieContext } from \"../../App\";\n\nconst Auth = () => {\n    const classes = useStyles()\n    const {user, setUser} = useContext(UserContext)\n    const {cookies, setCookie} = useContext(CookieContext)\n    const [signInText, setsignInText] = useState('Sign in with your vanderbilt.edu Email')\n\n    const navigate = useNavigate();\n\n    async function handleGoogleLoginSuccess(tokenResponse) {\n        const accessToken = tokenResponse.access_token;\n        \n        setsignInText('Logging into Vandy Run Club!')\n\n        // API Call\n        await login(accessToken)\n        .then( res => {\n            if(res.data.message) {\n                setsignInText(res.data.message + '. Please try again with a valid vanderbilt.edu email')\n            } else {\n                setCookie('token', res.data.token, {path:'/'})\n                setUser(res.data.result)\n                navigate(-1)\n            }  \n        })\n        .catch(err => {\n            setsignInText('We ran into an issue logging you in. Try again later')\n            console.log(\"ERROR: \", err.json)\n        })\n    }\n    const googleLogin = useGoogleLogin({onSuccess: handleGoogleLoginSuccess})\n\n    return(\n        <div>\n            <Container component=\"main\" maxwidth=\"xs\"> \n            <Paper className={classes.paper} elevation={3}>\n                <Avatar>\n                    {user ? <LockOpenOutlinedIcon /> : <LockOutlinedIcon />}\n                </Avatar>\n                <Typography varient=\"h5\">\n                    {signInText}\n                </Typography>\n                <Button fullWidth variant=\"contained\" className={classes.googleButton} color=\"primary\" onClick={() => googleLogin()}>\n                    Google Sign In\n                </Button>\n            </Paper>\n            </Container>\n        </div>\n    )\n}\n\nexport default Auth;","import React from 'react'\nimport {useNavigate} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nimport './links.css'\n\nconst Links = () => {\n\n  const navigate = useNavigate();\n\n  const openGroupMe = () => {\n    window.open('https://groupme.com/join_group/88408537/MKZan3OD', '_blank');\n  }\n\n  const practiceSignups = () => {\n    window.open('https://docs.google.com/spreadsheets/d/1EDIrVz3ZESnqif_Kfs86KTd_whF9-cg_210EIRAJ2dU/edit', '_blank');\n  }\n\n  const Instagram = () => {\n    window.open('https://www.instagram.com/vandyrunclub/?hl=en', '_blank');\n  }\n\n  const AnchorLink = () => {\n    window.open('https://anchorlink.vanderbilt.edu/organization/runningclub', '_blank');\n  }\n\n  return (\n \n    <div className='links'>\n      <table>\n        <thead>\n          <h1 className=\"connect\">Want to further connect with us?</h1>\n          <h1 className=\"linksBelow\">Click on the links below!</h1>\n        </thead>\n        <tbody>\n          <tr>\n            <Button onClick={openGroupMe}>GROUPME</Button>\n            <Button onClick={Instagram}>INSTAGRAM</Button>\n            <Button onClick={practiceSignups}>PRACTICE SIGNUPS</Button>\n            <Button onClick={AnchorLink}>ANCHORLINK</Button>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    );\n  };\n    \n  export default Links;","import React, { forwardRef, useEffect, useImperativeHandle } from \"react\"\nimport { useState } from \"react\";\nimport './TagComponent.css';\n// import { components } from \"react-select\";\n\nlet pressedArray = new Array(0,0,0,0,0,0);\n//let selectedTagsArray = [];\n//array of selected tags\n\nconst Tags = forwardRef(({updateTags}, ref) => {\n    //set button colors and selected colors\n    const buttonBackgroundColor = \"black\";\n    const clickedButtonColor = \"DarkGoldenRod\";\n    const [ShadyButtonColor, setShadyButtonColor] = useState(buttonBackgroundColor);\n    const [HillsButtonColor,setHillsButtonColor ] = useState(buttonBackgroundColor);\n    const [PedButtonColor,setPedButtonColor ] = useState(buttonBackgroundColor);\n    const [ShortButtonColor,setShortButtonColor ] = useState(buttonBackgroundColor);\n    const [MediumButtonColor,setMediumButtonColor ] = useState(buttonBackgroundColor);\n    const [LongButtonColor,setLongButtonColor ] = useState(buttonBackgroundColor);\n  \n    //array of selected tags\n    const[selectedArray,setSelectedArray] = useState([]);\n   \n    useImperativeHandle(ref, () => ({\n      clear() {\n        selectClear()\n      }\n    }))\n\n    useEffect(() => {\n      updateTags(selectedArray)\n    }, [selectedArray])\n\n    const selectShady = () => {\n \n        if (pressedArray[0] === 0){\n        setShadyButtonColor(clickedButtonColor);\n        setSelectedArray( arr => [...arr,\"shady\"]);\n        pressedArray[0] = 1;\n        //console.log(selectedArray.length);\n        console.info(selectedArray);\n        //console.log(this.useState.selectedArray);\n        \n        //console.log(selectedTagsArray.push(\"shady\")); \n    }\n        //console.info(pressedArray);\n      \n      console.log(\"shady tag pressed\");\n      //console.info(selectedTagsArray);\n  \n    }\n\n    const selectHills = () => {\n        console.log(\"hills tag pressed\");\n        if (pressedArray[1] === 0){\n        setHillsButtonColor(clickedButtonColor);\n        setSelectedArray( arr => [...arr,\"hills\"]);\n        //console.log(selectedTagsArray.push(\"hills\"));\n        pressedArray[1]= 1; \n        console.info(selectedArray);\n        }\n        //console.info(pressedArray);\n      \n        //console.info(selectedTagsArray);\n    \n      }\n\n      const selectPedestrian = () => {\n        console.log(\"pedestrian tag pressed\");\n        if (pressedArray[2] === 0){\n        setPedButtonColor(clickedButtonColor);\n        setSelectedArray( arr => [...arr,\"pedestrian\"]);\n        //console.log(selectedTagsArray.push(\"pedestrian\")); \n        pressedArray[2] = 1;\n        console.info(selectedArray);\n        }\n       //console.info(pressedArray);\n        //console.info(selectedTagsArray);\n    \n      }\n\n      const selectShort = () => {\n        if (pressedArray[3] === 0){\n        setShortButtonColor(clickedButtonColor);\n        setSelectedArray( arr => [...arr,\"short\"]);\n        //selectedTagsArray.push(\"short\"); \n        pressedArray[3] = 1;\n        console.info(selectedArray);\n        }\n        //console.log(\"short tag pressed\");\n        //console.info(selectedTagsArray);\n    \n      }\n\n      const selectMedium= () => {\n        if (pressedArray[4] === 0){\n        setMediumButtonColor(clickedButtonColor);\n        setSelectedArray( arr => [...arr,\"medium\"]);\n       // selectedTagsArray.push(\"medium\"); \n        pressedArray[4] = 1;\n        console.info(selectedArray);\n        }\n        //console.log(\"medium tag pressed\");\n        //console.info(selectedTagsArray);\n    \n      }\n\n      const selectLong= () => {\n        if (pressedArray[5] === 0){\n        setLongButtonColor(clickedButtonColor);\n        setSelectedArray( arr => [...arr,\"long\"]);\n       // selectedTagsArray.push(\"long\");\n        pressedArray[5] = 1;\n        console.info(selectedArray);\n        } \n        //console.log(\"long tag pressed\");\n        //console.info(selectedTagsArray);\n    \n      }\n\n      const selectClear= () => {\n\n        \n        setShadyButtonColor(buttonBackgroundColor);\n        setHillsButtonColor(buttonBackgroundColor);\n        setPedButtonColor(buttonBackgroundColor);\n        setShortButtonColor(buttonBackgroundColor);\n        setMediumButtonColor(buttonBackgroundColor);\n        setLongButtonColor(buttonBackgroundColor);\n        setSelectedArray([]);\n        console.info(selectedArray);\n        for (var i = 0; i <pressedArray.length; ++i){\n            pressedArray[i] = 0;\n        }\n        \n        //selectedTagsArray.length = 0; \n        console.log(\"clear tag pressed\");\n        //console.info(pressedArray);\n        //console.info(selectedTagsArray);\n    \n      }\n\n    return(\n        <div className= \"tag-wrapper\">\n            {/* <div>{selectedArray.map( e =>\n          <div>{ e }</div>\n        )}\n        </div> */}\n         \n            <button id=\"shady\" onClick={selectShady}style={{ background: ShadyButtonColor }}value=\"Update\">\n                Shady\n            </button>\n            <button id=\"hills\" onClick={selectHills}style={{ background: HillsButtonColor }}>\n                Hills\n            </button>\n           \n            <button id=\"pedestrian\" onClick={selectPedestrian}style={{ background: PedButtonColor }}>\n                Pedestrian Friendly\n            </button>\n            <button id=\"short\" onClick={selectShort}style={{ background: ShortButtonColor }}>\n                Short\n            </button>\n            <button id=\"medium\" onClick={selectMedium}style={{ background: MediumButtonColor }}>\n                Medium\n            </button>\n            <button id=\"long\" onClick={selectLong}style={{ background: LongButtonColor }}>\n                Long\n            </button>\n            <button id=\"clear\" onClick={selectClear}>\n                Clear Selection\n            </button>\n        </div>\n    )\n})\n\nexport default Tags","import { MultiPoint } from \"ol/geom\";\nimport { getLength } from \"ol/sphere\";\nimport {\n  Circle as CircleStyle,\n  Fill,\n  Icon,\n  RegularShape,\n  Stroke,\n  Style,\n  Text,\n} from \"ol/style\";\nimport { BACKEND_URL } from \"../../constants\";\n\nexport const waypointStyle = new Style({\n  image: new Icon({\n    anchor: [0.5, 0.9],\n    src: `${BACKEND_URL}/image/waypoint.png`,\n    scale: 0.03\n  })\n});\n\nexport const stopsStyle = new Style({\n  image: new CircleStyle({\n    radius: 5,\n    fill: new Fill({color: 'black'}),\n    stroke: new Stroke({\n      color: 'rgba(189, 150, 23, 1.0)', \n      width: 2\n    })\n  })\n});\n\nexport const style = new Style({\n  fill: new Fill({\n    color: \"rgba(255, 255, 255, 0.2)\",\n  }),\n  stroke: new Stroke({\n    color: \"rgba(0, 0, 0, 0.5)\", //color of dotted line\n    lineDash: [10, 10],\n    width: 2,\n  }),\n  image: new CircleStyle({\n    radius: 5,\n    stroke: new Stroke({\n      color: \"rgba(0, 0, 0, 0.7)\",\n    }),\n    fill: new Fill({\n      color: \"rgba(255, 255, 255, 0.2)\",\n    }),\n  }),\n});\n\nexport const completeStyle = new Style({ //style for line that is finished being traced\n  fill: new Fill({\n    color: \"rgba(255, 255, 255, 0.2)\",\n  }),\n  stroke: new Stroke({\n    color: \"rgba(189, 150, 23, 1.0)\", //color of  line\n    //lineDash: [10, 10],\n    width: 4,\n  }),\n  image: new CircleStyle({\n    radius: 5,\n    stroke: new Stroke({\n      color: \"rgba(0, 0, 0, 0.7)\",\n    }),\n    fill: new Fill({\n      color: \"rgba(255, 255, 255, 0.2)\",\n    }),\n  }),\n});\n\nexport const labelStyle = (text, geometry) => {\n  return new Style({\n    text: new Text({\n      text: text,\n      font: \"14px Calibri,sans-serif\",\n      fill: new Fill({\n        color: \"rgba(255, 255, 255, 1)\",\n      }),\n      backgroundFill: new Fill({\n        color: \"rgba(0, 0, 0, 0.7)\",\n      }),\n      padding: [3, 3, 3, 3],\n      textBaseline: \"bottom\",\n      offsetY: 25,\n    }),\n    geometry: geometry\n  });\n}\n\nexport const tipStyle = new Style({\n  text: new Text({\n    font: \"12px Calibri,sans-serif\",\n    fill: new Fill({\n      color: \"rgba(255, 255, 255, 1)\",\n    }),\n    backgroundFill: new Fill({\n      color: \"rgba(0, 0, 0, 0.4)\",\n    }),\n    padding: [2, 2, 2, 2],\n    textAlign: \"left\",\n    offsetX: 15,\n  }),\n});\n\nexport const formatLength = function (length, miles = true) {\n  let kmLength;\n  let mileLength;\n  let meterLength;\n  let feetLength;\n  let output;\n  if (length > 1) {\n    kmLength = length;\n    mileLength = miles ? length : Math.round((kmLength / 1.609)*100)/ 100;\n    //output = Math.round((length / 1000) * 100) / 100 + \" km\";\n    output = parseFloat(mileLength).toFixed(2) + \" mi\";\n  } else {\n    meterLength = length * 1000.0;\n    feetLength = miles ? length * 5280.0 : Math.round((meterLength * 3.281)* 100) / 100;\n    //output = Math.round(length * 100) / 100 + \" m\";\n    output = parseFloat(feetLength).toFixed(0) + \" ft\";\n  }\n  return output;\n};\n\nexport const getDistance = function (line) {\n  const length = getLength(line);\n  let kmLength;\n  let mileLength;\n    kmLength =(length / 1000);\n    mileLength = Math.round((kmLength / 1.609)*100)/ 100;\n  \n  return mileLength;\n};\n\n//modified from code in https://github.com/ldreaaml/react-openlayers-map/blob/master/src/map/MeasuringComponent.js\n//and https://openlayers.org/en/latest/examples/measure.html","import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\nimport TileLayer from \"ol/layer/Tile\";\nimport { fromLonLat, toLonLat } from \"ol/proj\";\nimport { Draw } from \"ol/interaction\";\nimport { LineString, MultiPoint, Point } from \"ol/geom\";\nimport { OSM, Vector as VectorSource } from \"ol/source\";\nimport { Vector as VectorLayer } from \"ol/layer\";\nimport GeoJSON from 'ol/format/GeoJSON';\nimport { ApiKeyManager } from \"@esri/arcgis-rest-request\";\nimport { solveRoute } from \"@esri/arcgis-rest-routing\";\nimport travelMode from '../../constants/TravelMode.json'\n\nimport {\n  formatLength,\n  completeStyle,\n  labelStyle,\n  getDistance,\n  waypointStyle,\n  stopsStyle\n} from \"./MeasuringComponent\";\nimport { Feature } from \"ol\";\n\nconst authentication = ApiKeyManager.fromKey(process.env.REACT_APP_ARCGIS_KEY);\n\nconst endptFeatureID = 'EndPoints';\nconst wayptFeatureID = 'WayPoints'\nconst routeFeatureID = 'Route'\n\nconst MapComponent = forwardRef(({updateMap, editable=true, mapData}, ref) => {\n  const [map, setMap] = useState();\n  const mapElement = useRef()\n  const [source, setSource] = useState(\n    new VectorSource({\n      format: new GeoJSON(),\n  }))\n  const [drawFeature, setDrawFeature] = useState(\n    new Feature({\n      name: 'Drawn Point'\n  }))\n \n  const [routeIDStack] = useState([])\n  const [totalWaypts] = useState([])\n  let [totalRoute] = useState([])\n  let distance = 0.0\n\n  useImperativeHandle(ref, () => ({\n    reset() {\n      source.clear()\n      totalRoute.length =0;\n      totalWaypts.length=0;\n    },\n\n    undoLine(){\n      \n        let startPt = source.getFeatureById(endptFeatureID)?.getGeometry().getCoordinates()\n        let waypts = source.getFeatureById(wayptFeatureID)?.getGeometry().getCoordinates()\n        totalRoute.pop()\n        totalWaypts.pop()\n    \n        submit(totalRoute, totalWaypts)\n    \n        if (!startPt) {\n          return\n        } \n        if (startPt.length < 2) {\n          source.removeFeature(source.getFeatureById(endptFeatureID))\n          return\n        } else if (!waypts) {\n          source.getFeatureById(endptFeatureID).setGeometry(new MultiPoint([startPt[0]]))\n        } else  {\n          source.getFeatureById(endptFeatureID).setGeometry(new MultiPoint([startPt[0], waypts[waypts.length-1]]))\n          if (waypts.length > 1) {\n            waypts.pop()\n            source.getFeatureById(wayptFeatureID).setGeometry(new MultiPoint(waypts))\n          } else {\n            source.removeFeature(source.getFeatureById(wayptFeatureID))\n          }\n        }\n        const routeID = routeIDStack.pop()\n        source.removeFeature(source.getFeatureById(routeID))\n      }\n    \n    \n  }))\n\n  const calcDistance = () => {\n    let dist = 0\n    for (const i in totalRoute) {\n      dist += getDistance(new LineString(totalRoute[i]))\n   \n    }\n    return dist\n  }\n\n  const styleFunction = (feature) => {\n    let retStyle = [];\n    const geometry = feature.getGeometry();\n    // const type = geometry.getType();\n    const name = feature.get('name')\n  \n    if (name === 'EndPoints') {\n      retStyle.push(waypointStyle)\n      let startPt = new Point(geometry.getFirstCoordinate())\n      retStyle.push(labelStyle('Start', startPt))\n      if (geometry.getCoordinates().length > 1) {\n        let endPt = new Point(geometry.getLastCoordinate())\n        let label = 'End' + (editable ? ': ' + formatLength(calcDistance()) : '')\n        retStyle.push(labelStyle(label, endPt))\n      }\n    } else if (name === 'WayPoints') {\n      retStyle.push(stopsStyle)\n    } else if (name === 'Route') {\n      retStyle.push(completeStyle)\n    }\n    return retStyle;\n  };\n\n  const [vector] = useState(\n    new VectorLayer({\n      source: source,\n      style: styleFunction\n  }))\n\n  const submit = (route, waypoints) => {\n    distance = calcDistance() / 1.609;\n    distance = Math.round(distance *100)/ 100;\n    updateMap(route.flat().map(x => toLonLat(x).map(y => y.toFixed(5))), \n              waypoints.map(x => toLonLat(x).map(y => y.toFixed(5))),\n              distance)\n  }\n\n  const undo = () => {\n    let startPt = source.getFeatureById(endptFeatureID)?.getGeometry().getCoordinates()\n    let waypts = source.getFeatureById(wayptFeatureID)?.getGeometry().getCoordinates()\n    totalRoute.pop()\n    totalWaypts.pop()\n\n    submit(totalRoute, totalWaypts)\n\n    if (!startPt) {\n      return\n    } \n    if (startPt.length < 2) {\n      source.removeFeature(source.getFeatureById(endptFeatureID))\n      return\n    } else if (!waypts) {\n      source.getFeatureById(endptFeatureID).setGeometry(new MultiPoint([startPt[0]]))\n    } else  {\n      source.getFeatureById(endptFeatureID).setGeometry(new MultiPoint([startPt[0], waypts[waypts.length-1]]))\n      if (waypts.length > 1) {\n        waypts.pop()\n        source.getFeatureById(wayptFeatureID).setGeometry(new MultiPoint(waypts))\n      } else {\n        source.removeFeature(source.getFeatureById(wayptFeatureID))\n      }\n    }\n    const routeID = routeIDStack.pop()\n    source.removeFeature(source.getFeatureById(routeID))\n  }\n\n  const findRoute = (pt1, pt2) => {\n    solveRoute({\n      stops: [\n        toLonLat(pt1),\n        toLonLat(pt2),\n      ],\n      params: {\n        returnDirections: true,\n        directionsLanguage: \"es\",\n        travelMode: travelMode,\n      },\n      authentication: authentication,\n    }).then(response => {\n      let resRoute = response.routes.geoJson.features[0].geometry.coordinates.map(x => fromLonLat(x))\n      \n      let route = new Feature({\n        name: 'Route',\n        geometry: new LineString(resRoute)\n      })\n\n      let id = routeFeatureID+routeIDStack.length\n      route.setId(id)\n      routeIDStack.push(id)\n\n      totalRoute.push(resRoute)\n  \n      source.addFeature(route)\n\n      submit(totalRoute, totalWaypts)\n    }).catch(err => console.log(err));\n  }\n\n  const onDrawEnd = (event) => {\n    let newWaypt = event.feature.getGeometry().getCoordinates()\n    let startPt = source.getFeatureById(endptFeatureID)?.getGeometry().getCoordinates()\n    let waypts = source.getFeatureById(wayptFeatureID)?.getGeometry().getCoordinates()\n    // let route = source.getFeatures()[1]?.getGeometry().getCoordinates()\n    totalWaypts.push(newWaypt[0])\n\n    let feature, lastPt\n\n    // add new wypt to appropriate feature\n    if (!startPt) {\n      feature = new Feature({\n        name: 'EndPoints',\n        geometry: new MultiPoint([newWaypt[0]]),\n      })\n      feature.setId(endptFeatureID)\n      // feature.setStyle(waypointStyle)\n    } else if (startPt.length < 2) {\n      lastPt = startPt[0]\n      startPt.push(newWaypt[0])\n      source.getFeatureById(endptFeatureID).setGeometry(new MultiPoint(startPt))\n    } else if (!waypts) {\n      feature = new Feature({\n        name: 'WayPoints',\n        geometry: new MultiPoint([startPt[1]]),\n      })\n      feature.setId(wayptFeatureID)\n      lastPt = startPt[1]\n\n      startPt[1] = newWaypt[0]\n      source.getFeatureById(endptFeatureID).setGeometry(new MultiPoint(startPt))\n    } else {\n      lastPt = startPt[1]\n      waypts.push(lastPt)\n      source.getFeatureById(wayptFeatureID).setGeometry(new MultiPoint(waypts))\n      \n      startPt[1] = newWaypt[0]\n      source.getFeatureById(endptFeatureID).setGeometry(new MultiPoint(startPt))\n    }\n    \n    if (feature) {\n      source.addFeature(feature)\n    }\n\n    if (lastPt) {\n      // submit data after finding route\n      findRoute(lastPt, newWaypt[0])\n    }\n  }\n\n  const introduceData = () => {\n    const points = mapData.waypoints.map(x => fromLonLat(x))\n    const coords = mapData.route.map(x => fromLonLat(x))\n    distance = mapData.distance\n    totalRoute = [coords] \n    vector.changed()\n\n    const route = new Feature({\n      name: 'LineString',\n      geometry: new LineString(coords)\n    })\n    route.setStyle(completeStyle)\n    source.addFeature(route)\n\n    let endPointsGeometry\n    let waypointsGeometry\n    if (mapData.waypoints.length == 1) {\n      endPointsGeometry = new MultiPoint([points[0]])\n    } else if (points.length == 2) {\n      endPointsGeometry = new MultiPoint([points[0], points[1]])\n    } else if (points.length > 2) {\n      endPointsGeometry = new MultiPoint([points[0], points[points.length - 1]])\n      points.shift()\n      points.pop()\n      waypointsGeometry = new MultiPoint(points)\n    }\n\n    if (endPointsGeometry) {\n      const endPoints = new Feature({\n        name: 'EndPoints',\n        geometry: endPointsGeometry\n      })\n\n      // endPoints.setStyle(waypointStyle)\n      source.addFeature(endPoints)\n    }\n\n    if (waypointsGeometry) {\n      const waypoints = new Feature({\n        name: 'WayPoints',\n        geometry: waypointsGeometry\n      })\n\n      source.addFeature(waypoints)\n    }\n  }\n\n  useEffect(() => {\n    source.clear()\n    const raster = new TileLayer({\n      source: new OSM(),\n    });\n    // const vector = new VectorLayer({\n    //   source: source,\n    //   style: styleFunction\n    // });\n\n    const _map = new Map({\n      target: mapElement.current,\n      layers: [raster,vector],\n     // target:'_map',\n      view: new View({}),\n    });\n   \n    let draw;\n    const addInteraction = () => {\n      const drawType = 'MultiPoint'; //draws points\n      draw = new Draw({\n        feature: drawFeature,\n        type: drawType,\n        style: waypointStyle,\n      });\n      draw.on(\"drawend\", onDrawEnd);\n      _map.addInteraction(draw);\n    };\n    \n    if (!editable) {\n      introduceData()\n      _map.getView().fit(source.getExtent(), _map.getSize());\n      _map.getView().setZoom(_map.getView().getZoom() - 0.5);\n      _map.getInteractions().forEach(x => x.setActive(false))\n    } else {\n      _map.setView(new View({\n        center: fromLonLat([-86.8027, 36.1447]),\n        zoom: 15,\n      }))\n      addInteraction();\n    }\n\n    setMap(_map);\n  }, []);\n\n  useEffect(() => {\n    if (!editable && map) {\n      source.clear()\n      introduceData()\n      map.getView().fit(source.getExtent(), map.getSize());\n      map.getView().setZoom(map.getView().getZoom() - 0.5);\n      map.getInteractions().forEach(x => x.setActive(false))\n    }\n  }, [mapData])\n  \n\n  return (\n    <>\n      <div ref={mapElement} className=\"map-container\"></div>\n      {/* <button onClick={undo} disabled={!editable}>undo</button> */}\n    </>\n  );\n})\n\nexport default MapComponent;","import * as React from 'react';\nimport { forwardRef, useEffect, useImperativeHandle } from \"react\"\nimport { useState } from \"react\";\n\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\nimport Tags from '../Tags/TagComponent';\nimport \"./DropdownComponent.css\";\n//import { ThemeOptions } from '@material-ui/core/styles/createMuiTheme';\n//import { ThemeProvider, createTheme } from '@mui/material/styles';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n// const darkTheme = createTheme({\n//     palette: {\n//         type: 'dark',\n//         primary: {\n//           main: '#000000', //box border and small text\n//         },\n//         secondary: {\n//           main: '##C72B43',\n//         },\n//         background: {\n//             default: '#000000',\n//             paper: '#FFFFFF', //color of back of menu\n//         },\n//         text: {\n//           primary: '#000000', //color of text\n//           secondary: '#000000', //color of first select tags\n//           disabled: '#ffebee',\n//           hint: '#fafafa',\n//         },\n//         divider: '#C72B43',\n//       },\n\n//       components: {\n//         MuiChip: {\n//           styleOverrides: {\n//             colorPrimary: {\n//               backgroundColor: 'red',\n//             },\n//             colorSecondary: {\n//               backgroundColor: 'brown',\n//             },\n//           },\n//         },\n//       },\n//   });\n\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst tags = [\n    'Shady',\n    'Pedestrian Friendly',\n    'Hills',\n    'Scenic',\n    'Near Campus',\n    'Few Stops',\n    'Short',\n    'Medium',\n    'Long',\n  \n];\n\nfunction getStyles(name, selectedArray, theme) {\n    return {\n        fontWeight:\n            selectedArray.indexOf(name) === -1\n                ? theme.typography.fontWeightRegular\n                : theme.typography.fontWeightMedium,\n    };\n}\n\n\n\nconst Dropdown = forwardRef(({ updateTags }, ref) => {\n\n    const theme = useTheme();\n    //array of selected tags\n    const [selectedArray, setSelectedArray] = useState([]);\n\n    useImperativeHandle(ref, () => ({\n        clear() {\n            //selectClear()\n        }\n    }))\n\n    useEffect(() => {\n        updateTags(selectedArray)\n    }, [selectedArray])\n\n\n\n    const handleChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setSelectedArray(\n            // On autofill we get a stringified value.\n            typeof value === 'string' ? value.split(',') : value,\n        );\n    };\n    return (\n\n\n        <div>\n        <FormControl sx={{ m: 1, width: 300, mt: 3 }}>\n          <Select\n            multiple\n            displayEmpty\n            value={selectedArray}\n            onChange={handleChange}\n            input={<OutlinedInput />}\n            renderValue={(selected) => {\n              if (selected.length === 0) {\n                return <em>Select Tags</em>;\n              }\n  \n              return selected.join(', ');\n            }}\n            MenuProps={MenuProps}\n            inputProps={{ 'aria-label': 'Without label' }}\n          >\n\n            <MenuItem disabled value=\"\">\n              <em>Select Tags</em>\n            </MenuItem>\n            \n            {tags.map((name) => (\n              <MenuItem\n                key={name}\n                value={name}\n                style={getStyles(name, selectedArray, theme)}\n              >\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n    )\n\n})\n\n\nexport default Dropdown\n\n//https://mui.com/material-ui/react-select/ ","\nimport React from 'react';\nimport { useRef, useState } from 'react';\nimport {Routes, Route, useNavigate} from 'react-router-dom';\n//import NavBar from '../../components/NavBar-component/NavBar'\nimport Button from '@material-ui/core/Button';\nimport Tags from \"../../components/Tags/TagComponent\";\nimport MapComponent from \"../../components/Map/MapComponent\";\nimport Dropdown from '../../components/Dropdown/DropdownComponent';\nimport \"./findyourrun.css\";\n\n\n\nconst FindYourRun = () => {\n  const tagsRef = useRef()\n  \n\n\n  \n  //const mapRef = useRef()\n  const navigate = useNavigate();\n\n  const navigateToCreate = () => {\n    navigate('/create');\n  }\n\n  const navigateToFind = () => {\n    navigate('/find');\n  }\n\n  const updateTags = (tags_) => {\n    \n    console.log(\"updateTags\");\n  }\n\n\nreturn (\n  \n  \n  <div className= \"main-wrapper\">\n     \n    <div className = \"links\">\n\n      <button id=\"create\" onClick={navigateToCreate}>\n          Create A Run\n      </button>\n      <button id=\"find\" onClick={navigateToFind}>\n          Find A Run\n      </button>\n\n\n\n    </div>\n    \n     \n  </div>\n  \n  );\n}\n  export default FindYourRun;","import {api as axios} from '../utils/axios'\n\nexport async function updateBio(bio, id) {\n    return await axios({\n        method: \"POST\",\n        url: `/bio/update/${id}`,\n        data: bio\n    })\n}\n\nexport async function getBios() {\n    return await axios({\n        method: \"GET\",\n        url: '/bio/',\n    })\n}\n\nexport async function addNewBio(bio) {\n    return await axios({\n        method: \"POST\",\n        url: '/bio/new',\n        data: bio\n    })\n}\n\nexport async function deleteBio(bio) {\n    return await axios({\n        method: \"DELETE\",\n        url: `/bio/delete/${bio._id}`,\n    })\n}","import React, {useContext, useEffect, useState} from \"react\"\n\nimport { UserContext } from '../../App'\nimport { updateBio, deleteBio } from \"../../api/bios\"\nimport { BACKEND_URL, IMAGE_UPLOAD_PRESET } from \"../../constants\"\nimport '../Bio/bio.css';\nimport axios from 'axios';\n\nimport CameraAlt from '@material-ui/icons/CameraAlt';\nimport Create from '@material-ui/icons/Create';\n\n\n\nconst Bio = ({bio}) => {\n    const {user} = useContext(UserContext)\n    const [isEditing, setIsEditing] = useState(false)\n    const [isAdmin, setisAdmin] = useState(false)\n    const [isValid, setValid] = useState(false)\n    const [imageURL, setimageURL] = useState(bio.picture)\n    \n    const [newBio, setnewBio] = useState(\n        {\n            name: bio.name,\n            title: bio.title,\n            email: bio.email,\n            text: bio.text,\n            photo: bio.picture,\n            _id: bio._id\n        }\n    );\n\n    const email = \"mailto:\" + bio.email;\n\n    useEffect(() => {\n        setisAdmin(user.role === 'admin')\n    }, [])\n\n    const validate = () => {\n        return newBio.name && newBio.title && \n               newBio.email && newBio.text\n    }\n\n    useEffect(() => {\n        const isValid = validate();\n        setValid(isValid);\n    }, [newBio]);\n\n    const handleSubmit = async (e)=>{\n        e.preventDefault()    \n        \n        let retImageUrl = \"\";\n        if (newBio.photo) {\n            let image = newBio.photo\n            // formData.append('photo', photo);\n            const cloudinaryForm = new FormData();\n            cloudinaryForm.append(\"file\", image);\n            cloudinaryForm.append(\"upload_preset\", IMAGE_UPLOAD_PRESET);\n            const dataRes = await axios.post(\n                `https://api.cloudinary.com/v1_1/dalnl907c/upload`,\n                cloudinaryForm\n            );\n            retImageUrl = dataRes.data.url;\n        }\n        \n        if (retImageUrl) {\n            newBio.picture = retImageUrl\n        }\n\n        await updateBio(newBio, bio._id)\n            .then(res => {\n                bio = res.data\n                setnewBio(bio)\n                setIsEditing(false)\n                setimageURL(bio.picture)\n            })\n            .catch(err => console.log(err))\n    }    \n\n    const handleDelete = async (e) => {\n        deleteBio(bio)\n            .catch(err => console.log(err))\n        window.location.reload();\n    }\n\n    const handleChange = (e) => {\n        setnewBio({...newBio, [e.target.name]: e.target.value});\n    }\n\n    const handlePhoto = (e) => {\n        setnewBio({...newBio, photo: e.target.files[0]});\n    }\n\n\n    const handleEditAttempt = () => {\n        if (isAdmin) {\n            setIsEditing(true)\n        }\n    }\n\n    \n    return(\n        <div className = 'tasks-container'>\n            {isEditing ? \n                <form onSubmit={handleSubmit} encType='multipart/form-data'>\n                <div className=\"edit-buttons\">\n                    <button type=\"submit\" disabled={!isValid}>Update Bio</button> \n                    <button type=\"button\" onClick={handleDelete}>Delete Bio</button>\n                    <button type=\"button\" onClick={() => setIsEditing(false)}>Cancel Edit</button>\n                </div>\n                \n                    <input type='text' name='name' defaultValue={bio.name} placeholder='Name' onChange={handleChange}/>\n                    <input type='text' name='title' defaultValue={bio.title} placeholder='Exec Title' onChange={handleChange}/>\n                    <input type = 'text' name='email' defaultValue = {bio.email} placeholder='Email' onChange={handleChange}/>\n                    <input type='text' name='text' defaultValue={bio.text} placeholder='Bio' onChange={handleChange}/>\n                \n                <div className = \"photo-file\">\n                    <h1>Upload a photo for your bio <CameraAlt /></h1>\n                    <input type = 'file' name='photo' accept=\".png, .jpg, .jpeg\" onChange={handlePhoto}/>  \n                </div>\n                </form>\n                : \n                <div className = 'bioView'>\n                    <img className = 'image' src={imageURL}></img>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td className= 'bioInfo'>\n                                    <div className=\"name-and-edit\">\n                                        <h1>{bio.name}</h1>\n                                        {user.role === 'admin' && <button onClick = {handleEditAttempt}><Create /></button>}\n                                    </div>\n                                    <div className=\"exec-title\">\n                                        <h1>{bio.title}</h1>\n                                    </div>\n                                    <div className = 'email'>\n                                        <h1>{bio.email}</h1> \n                                    </div>\n                                    <p>{bio.text}</p>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    \n                </div>\n            }           \n        </div>\n    )\n\n\n}\n\nexport default Bio","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst PopUpDialog = ({message, open, handleClose}) => {\n  return (\n    <div className='yes-no-dialog'>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{message}</DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Take Me There!\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default PopUpDialog;","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport './popup.css'\nimport { addNewBio } from '../../api/bios';\nimport PopUpDialog from '../popup-dialog/popup-dialog';\n\nconst NewBioPopup = ({message, open, handleClose}) => {\n  const [fname, setfname] = useState('')\n  const [femail, setfemail] = useState('')\n  const [ftitle, setftitle] = useState('')\n  const [ftext, setftext] = useState('')\n  const [isValid, setValid] = useState(false)\n\n  const validate = () => {\n    return fname.length && femail.length && ftitle.length && ftext.length\n  }\n\n  useEffect(() => {\n    const isValid = validate();\n    setValid(isValid);\n  }, [fname, femail, ftitle, ftext]);\n\n\n  const handleSubmit = () => {\n    let bio ={\n        name: fname,\n        email: femail,\n        title: ftitle,\n        text: ftext,\n        picture: 'logo.jpeg'\n    } \n\n    addNewBio(bio)\n        .then(res => console.log(res))\n        .catch(err => console.log(err))\n  }\n  \n  return(\n    <div className='new-bio-popup'>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{message}</DialogTitle>\n        <DialogActions>\n            <form onSubmit={handleSubmit}>\n            <input type='text' name='name' placeholder='Name' onChange={e => setfname(e.target.value)}/>\n            <input type='text' name='title' placeholder='Exec Title' onChange={e => setftitle(e.target.value)}/>\n            <input type='text' name='text' placeholder='Bio' onChange={e => setftext(e.target.value)}/>\n            <input type='text'  name='email' placeholder='Email' onChange={e => setfemail(e.target.value)}/>\n            <Button type='Submit' disabled={!isValid}>Submit</Button>\n            </form>\n            <Button onClick={handleClose}>\n                Close\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default NewBioPopup;","import React from 'react'\nimport './loading-animation.css'\n\nconst LoadingAnimation = () => (\n    <div className=\"animation-container\">\n        <div id=\"preloader\">\n            <div id=\"loader\"></div>\n        </div>\n    </div>\n)\n\nexport default LoadingAnimation;","import React, { useContext, useEffect, useState } from 'react'\n// //import { Link } from \"react-router-dom\";\nimport Bio from '../../components/Bio/bio';\nimport NewBioPopup from '../../components/Bio/popup';\nimport LoadingAnimation from '../../components/loading-animation/loading-animation';\n\nimport { getBios } from '../../api/bios';\n\nimport { UserContext } from '../../App';\nimport './meetTheTeam.css'\n\nimport Create from '@material-ui/icons/Create';\n\nconst MeetTheTeam = () => {\n    const [bios, setBios] = useState([])\n    const [openNewBio, setopenNewBio] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const {user} = useContext(UserContext)\n\n    useEffect(()=>{\n      getBios()\n        .then(res => {setBios(res.data); setLoading(false)})\n        .catch(err => console.log(err))\n    }, [])\n\n    return (\n      <div className= \"total-wrapper\">\n \n        { loading ?  \n          <LoadingAnimation />\n          :\n          <div className='main-wrapper' >\n            <div className='pageCover'>\n              <h1>MEET Our Exec Board!</h1>  \n            </div>\n            \n            \n            <div className='bios'>\n            {bios.map(bio => <Bio\n              key={bio._id}\n              bio={bio}\n            />)}\n            </div>\n\n            <div className='add-bio-button'>\n              {\n                user.role === 'admin' &&\n                <button onClick={() => setopenNewBio(true)}><Create />Add New Bio</button>\n              }\n            </div>\n\n           \n            <NewBioPopup \n              message={'Add New Exec Member Bio'}\n              open={openNewBio}\n              handleClose={() => {setopenNewBio(false)}}\n            />\n          </div>\n        }\n      </div>\n\n   \n    );\n  };\n    \n  export default MeetTheTeam;","import {api as axios} from '../utils/axios'\n\n// Returns the RunData in the form of geo json. \n// id obtained from the RunMeta\nexport async function getRun(id) {\n    return await axios({\n        method: \"GET\",\n        url: `/runs/${id}`,\n    })\n}\n\n// query should be of the form {distance: number, tags: [string]}\n// returns array of RunMeta's sorted by query params\nexport async function search(query) {\n    return await axios({\n        method: \"GET\",\n        url: `/runs/find`,\n        params: query\n    })\n}\n\n// run should be of the form \n// {meta: RunMeta object (see server/models/RunMeta), data: geo json}\nexport async function makeRun(run) {\n    return await axios({\n        method: \"POST\",\n        url: `/runs/new`,\n        data: run\n    })\n}","import React, { useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport MapComponent from \"../../components/Map/MapComponent\";\nimport Dropdown from '../../components/Dropdown/DropdownComponent';\nimport \"ol/ol.css\";\nimport \"./create.css\";\nimport { makeRun } from '../../api/runs';\nimport IconButton from '@mui/material/IconButton';\n\nimport Undo from '@material-ui/icons/Undo';\nimport Create from '@material-ui/icons/Create';\nimport Search from '@material-ui/icons/Search';\nimport Delete from '@material-ui/icons/Delete';\nimport Publish from '@material-ui/icons/Publish';\n// import ThreeDRotation from '@material-ui/icons/ThreeDRotation';\n\n\n\n\nconst CreateARun = () => {\n  const mapRef_web = useRef()\n  const mapRef_mobile = useRef()\n  const tagsRef = useRef()\n  //declare a run route handler\n  const [showIcons, setShowIcons] = useState(false);\n  const [runRouteError, setRouteText] = useState('* Fill all required fields before submitting')\n  const [routeDrawn, setDrawn] = useState(true); //indicates if route has been drawn\n  const [mapContext, setMapContext] = useState({\n    name: \"\",\n    distance: 0,\n    tags: [],\n    data: null,\n  })\n\n  const navigate = useNavigate();\n\n  const navigateToCreate = () => {\n    navigate('/create');\n  }\n\n  const navigateToFind = () => {\n    navigate('/find');\n  }\n  const handleChange = (event) => {\n\n    if (routeDrawn) {\n      setMapContext({ ...mapContext, [event.target.name]: event.target.value });\n    }\n    else {\n      //mapContext.name= \"Please Draw a Route\";\n      console.log(\"draw route first\");\n      setMapContext({ ...mapContext, [event.target.name]: \"Please Draw a Route\" });\n    }\n  };\n\n  const validate = () => {\n    if (!mapContext.data?.route.length) {\n      setRouteText('Please draw a route on the map')\n      return false\n    }\n    if (!mapContext.tags.length) {\n      setRouteText('Please select tags')\n      return false\n    }\n    if (!mapContext.name.length) {\n      setRouteText('Please name your route')\n      return false\n    }\n    return true\n  }\n\n\n  const updateMap = (route, waypoints, distance) => {\n    setDrawn(true);\n\n    let tmp = mapContext;\n    tmp.name = mapContext.name;\n    tmp.data = {\n      route: route,\n      waypoints: waypoints\n    }\n    tmp.distance = distance;\n    setMapContext(tmp);\n  }\n\n  //Why are these the same?\n  const updateTags = (tags_) => {\n    console.log(mapContext.name);\n    let tmp = mapContext;\n    tmp.tags = tags_;\n    setMapContext(tmp);\n    console.log(tags_);\n    console.log(\"updateTags\");\n  }\n\n\n  const uploadMap_web = () => {\n    let runMeta = { name: mapContext.name, distance: mapContext.distance, tags: mapContext.tags }\n    let run = {\n      meta: runMeta,\n      data: mapContext.data\n    }\n \n    if (validate()) {\n      makeRun(run)\n        .then(console.log('Successfull upload'),\n          setRouteText('Successfully uploaded run!')\n        )\n        .catch(err => console.log(err))\n\n      mapRef_web.current.reset();\n      setMapContext({\n        // name: mapContext.name,\n        name: '',\n        distance: 0,\n        tags: [],\n        coordinates: [],\n      })\n    }\n  };\n\n  const removeLines_web = () => {\n    console.log(mapContext.name);\n    mapRef_web.current.reset();\n    tagsRef.current.clear();\n    setDrawn(false);\n    //setMapContext({ ...mapContext, name: \"Please Draw a Route\" });\n    setMapContext({\n      // name: mapContext.name,\n      name: \"Please Draw a Route\",\n      distance: 0,\n      tags: [],\n      coordinates: [],\n    })\n  };\n\n  const undoLines_web = () => {\n    console.log(mapContext.name);\n    mapRef_web.current.undoLine();\n\n  };\n\n\n  const uploadMap_mobile = () => {\n    let runMeta = { name: mapContext.name, distance: mapContext.distance, tags: mapContext.tags }\n    let run = {\n      meta: runMeta,\n      data: mapContext.data\n    }\n \n    if (validate()) {\n      makeRun(run)\n        .then(console.log('Successfull upload'),\n          setRouteText('Successfully uploaded run!')\n        )\n        .catch(err => console.log(err))\n\n      mapRef_mobile.current.reset();\n      setMapContext({\n        // name: mapContext.name,\n        name: '',\n        distance: 0,\n        tags: [],\n        coordinates: [],\n      })\n    }\n  };\n\n  const removeLines_mobile = () => {\n    console.log(mapContext.name);\n    mapRef_mobile.current.reset();\n    tagsRef.current.clear();\n    setDrawn(false);\n    //setMapContext({ ...mapContext, name: \"Please Draw a Route\" });\n    setMapContext({\n      // name: mapContext.name,\n      name: \"Please Draw a Route\",\n      distance: 0,\n      tags: [],\n      coordinates: [],\n    })\n  };\n\n  const undoLines_mobile = () => {\n    console.log(mapContext.name);\n    mapRef_mobile.current.undoLine();\n\n  };\n\n\n  return (\n    // make a whole new set of things and make them all hidden\n    <div className=\"main-wrapper\">\n      <div className=\"hidden-part\">\n      <div className=\"create-header\">\n        <h1 className='lets-create'>Create Your Run</h1>\n      </div>\n      {/* end create-header */}\n\n      <div className=\"main-wrapper-create\">\n        \n          <div className='row'>\n            <div className=\"column left\">\n              {/* id={showInfo ? \"hidden\" : \"\"} */}\n              <div className=\"mapButtons\">\n                <button className=\"undo-button\" onClick={undoLines_web}><Undo /></button>\n                <button className=\"reset-button\" onClick={removeLines_web}><Delete /></button>\n              </div>\n              {/* end map buttons */}\n              <div className='map' id={showIcons ? \"hidden\" : \"\"}>\n                <MapComponent\n                  ref={mapRef_web}\n                  updateMap={updateMap} /> \n              </div>\n              <br></br>\n              {/* end map component */}\n            </div>\n            {/* end left column */}\n\n            <div className=\"column right\">\n            {/* id={showInfo ? \"hidden\" : \"\"} */}\n              <div className='navButtons'>\n                <button id=\"create\" onClick={navigateToCreate}><Create /> Create A Run</button>\n                <button id=\"find\" onClick={navigateToFind}><Search /> Find A Run</button>\n              </div>\n              {/* end navButtons */}\n              <div className='dropdown'>\n\n              <Dropdown\n                ref={tagsRef} updateTags={updateTags}\n              />\n              </div>\n              {/* end dropdown */}\n           \n              <div className=\"name\">\n                <input id=\"namebox\" type='text' name='name' placeholder='Name Your Run' value={mapContext.name} onChange={handleChange} />\n              </div>\n              {/* end name */}\n\n\n              <div className=\"measuring-tool\">\n                <div className=\"button-wrap\">\n                  <button className=\"upload-button\" onClick={uploadMap_web}><Publish /> Upload Route</button>\n                </div>\n                <div className='fill-text'>\n                  <h1 id=\"routeErrText\">{runRouteError}</h1>\n                </div>\n                {/* end h1 */}\n              </div>\n              {/* end measuring-tool */}\n\n            </div>\n            {/* end column right */}\n\n\n          </div>\n          {/* end row div */}\n\n\n\n\n\n\n          {/* WORK HERE */}\n          \n\n\n        </div>\n        {/* end hidden div */}\n      </div>\n      {/* end main wrapper create */}\n      <div className=\"hidden-when-big\">\n\n        {/*           HEADER DIV             */}\n        <div className=\"create-header-hidden\">\n          <h1 className='lets-create-hidden'>Create Your Run</h1>\n        {/* <h1 className='start-tracing'>Click anywhere on the map to start tracing your route.</h1> */}\n        </div>\n\n        {/*            NAVBUTTONS DIV          */}\n        <div className='navButtons-hidden'>\n          <button id=\"create-hidden\" onClick={navigateToCreate}><Create /> Create A Run</button>\n          <button id=\"find-hidden\" onClick={navigateToFind}><Search /> Find A Run</button>\n        </div>\n\n        {/*            UNDO AND REDO BUTTONS         */}\n        <div className=\"mapButtons-hidden\">\n          <button className=\"undo-button-hidden\" onClick={undoLines_mobile}><Undo /></button>\n          <button className=\"reset-button-hidden\" onClick={removeLines_mobile}><Delete /></button>\n          \n        </div>\n\n        {/*            MAP COMPONENT             */}\n        <div className=\"hidden-map\">\n          {/* <button onClick={() => setShowIcons(!showIcons)}>Calendar</button> */}\n          <MapComponent\n            ref={mapRef_mobile}\n            updateMap={updateMap} \n          /> \n        </div>\n\n        {/*           ERROR MESSAGES          */}\n        <div className='error-msg'>\n          <h1 id=\"routeErrText-hidden\">{runRouteError}</h1>\n        </div>\n\n        {/*             DROPDOWN COMPONENT         */}\n        <div className='dropdown-hidden'>\n          <Dropdown\n            ref={tagsRef} updateTags={updateTags}\n          />\n        </div>\n\n        {/*             NAME AND SUBMIT            */}\n        <div className='name-and-submit'>\n          {/* name */}\n          <div className=\"name-hidden\">\n            <input id=\"namebox\" type='text' name='name' placeholder='Name Your Run' value={mapContext.name} onChange={handleChange} />\n          </div>\n          {/* submit */}\n          <div className=\"submit-hidden\">\n            <button className=\"upload-button-hidden\" onClick={uploadMap_mobile}><Publish /> Upload Route</button>\n          </div>\n        </div>\n\n        \n\n\n\n      </div>\n    </div>\n    // end big div\n\n  );\n}\nexport default CreateARun;","\nimport React, { useEffect, useState } from \"react\"\nimport MapComponent from \"../Map/MapComponent\"\nimport {getRun} from \"../../api/runs\"\nimport LoadingAnimation from \"../loading-animation/loading-animation\"\nimport './run-description.css'\n\nconst RunDescription = ({description}) => {\n    const [mapData, setMapData] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [hasData, setHasData] = useState(description)\n\n    let tags = hasData ? description.tags : ['None'];\n    let tagsToString = tags.join(',           ');\n\n\n    const loadRun = () => {\n        getRun(description.data_id)\n                .then(res => {\n                    let data = {\n                        route: res.data.route.map(\n                            nums => [parseFloat(nums[0]), parseFloat(nums[1])]\n                        ),\n                        waypoints: res.data.waypoints.map(\n                            nums => [parseFloat(nums[0]), parseFloat(nums[1])] \n                        ),\n                        distance: description.distance\n                    }\n                    setMapData(data)\n                    setLoading(false)\n                    setHasData(true)\n                })  \n    }\n\n    useEffect(() => {\n        if (description) {\n            loadRun()\n        }\n    }, [description]) \n\n    useEffect(() => {\n        if (description) {\n            loadRun()\n        }\n    }, []) \n\n    return(\n        <div className=\"run-returns\"> \n            { !hasData ? \n          <div className = \"welcome-message\">\n                <h1>  <br></br><br></br><br></br>Search for new running routes!<h2>Choose your distance and tags to find the perfect route for you</h2></h1>\n                </div>\n            :\n            <div>\n                <div className=\"description\">\n                    <h1>{description.name}</h1>\n                    <p>Distance: {description.distance} miles</p>\n                    <div className=\"array\">\n                    \n                        {/* <p>Tags: {tags}</p> */}\n                        {/* <p>Tags: {description.tags}</p> */}\n                        <p>Tags: {tagsToString}</p>\n                    </div>\n                </div>\n                <div className=\"map-picture\">\n                    { loading ?\n                    <LoadingAnimation /> :\n                    <MapComponent\n                        mapData={mapData}\n                        editable={false}\n                    />\n                    }\n                </div> \n            </div>\n            }\n        </div>\n    )\n}\n\nexport default RunDescription","\nimport {\n    ChangeEvent,\n    FC,\n    useCallback,\n    useEffect,\n    useState,\n    useRef\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport \"./MultiRangeSlider.css\";\n\n\nconst MultiRangeSlider = ({ min, max, onChange }) => {\n    const [minVal, setMinVal] = useState(min);\n    const [maxVal, setMaxVal] = useState(max);\n    // Creating the refs\n    const minValRef = useRef(null);\n    const maxValRef = useRef(null);\n    // Create a ref\n    const range = useRef(null);\n\n   \n    // Convert to percentage\n    const getPercent = useCallback((value) => {\n        Math.round(((value - min) / (max - min)) * 100);\n    }, [min, max]);\n\n    // Set width of the range to decrease from the left side\n    useEffect(() => {\n        if (maxValRef.current) {\n            const minPercent = getPercent(minVal);\n            const maxPercent = getPercent(+maxValRef.current.value);\n\n            if (range.current) {\n                range.current.style.left = `${minPercent}%`;\n                range.current.style.width = `${maxPercent - minPercent}%`;\n            }\n        }\n    }, [minVal, getPercent]);\n\n    // Set width of the range to decrease from the right side\n    useEffect(() => {\n        if (minValRef.current) {\n            const minPercent = getPercent(+minValRef.current.value);\n            const maxPercent = getPercent(maxVal);\n\n            if (range.current) {\n                range.current.style.width = `${maxPercent - minPercent}%`;\n            }\n        }\n    }, [maxVal, getPercent]);\n\n    // Get min and max values when their state changes\n    useEffect(() => {\n        onChange({ min: minVal, max: maxVal });\n    }, [minVal, maxVal, onChange]);\n\n    // Get min and max values when their state changes\n    useEffect(() => {\n        onChange({ min: minVal, max: maxVal });\n    }, [minVal, maxVal, onChange]);\n\n    return (\n        <div className=\"container\">\n\n            <input\n                type=\"range\"\n                min={min}\n                max={max}\n                value={minVal}\n                ref={minValRef}\n                onChange={(event) => {\n                    const value = Math.min(+event.target.value, maxVal - 1);\n                    setMinVal(value);\n                    event.target.value = value.toString();\n                }}\n                className={classnames(\"thumb thumb--zindex-3\", {\n                    \"thumb--zindex-5\": minVal > max - 100\n                })}\n            />\n            <input\n                type=\"range\"\n                min={min}\n                max={max}\n                value={maxVal}\n                ref={maxValRef}\n                onChange={(event) => {\n                    const value = Math.max(+event.target.value, minVal + 1);\n                    setMaxVal(value);\n                    event.target.value = value.toString();\n                }}\n                className=\"thumb thumb--zindex-4\"\n            />\n\n            <div className=\"slider\">\n                <div className=\"slider__track\"></div>\n                <div ref={range} className=\"slider__range\"></div>\n                <div className=\"slider__left-value\">{minVal} mi</div>\n                <div className=\"slider__right-value\">{maxVal} mi</div>\n            </div>\n        </div>\n    );\n};\n\n// Set the type of each prop\nMultiRangeSlider.propTypes = {\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\n\nexport default MultiRangeSlider;\n// Code from https://dev.to/sandra_lewis/building-a-multi-range-slider-in-react-from-scratch-4dl1","import React, { useEffect, useRef, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { search as searchAPI } from '../../api/runs';\nimport LoadingAnimation from '../../components/loading-animation/loading-animation';\nimport RunDescription from '../../components/RunDescription/run-description';\nimport MultiRangeSlider from '../../components/rangeSlider/MultiRangeSlider'\nimport Dropdown from '../../components/Dropdown/DropdownComponent';\nimport { Avatar, Button, Paper, Typography, Container } from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBackIos';\nimport ArrowForward from '@material-ui/icons/ArrowForwardIos';\nimport IconButton from '@mui/material/IconButton';\nimport Create from '@material-ui/icons/Create';\nimport Search from '@material-ui/icons/Search';\n\nimport \"./find.css\";\n\nconst FindARun = () => {\n  const [runFindError, setFindText] = useState('*Fill all required fields before searching')\n\n  const [runs, setRuns] = useState([]);\n  const [runIndex, setRunIndex] = useState(0)\n  const [curRun, setCurRun] = useState()\n  const [loading, setLoading] = useState(false)\n  //controll if search should be an option\n  const [searchable, setSearchable] = useState(false)\n  const [query, setQuery] = useState({\n    minDistance: 0,\n    maxDistance: 100,\n    //distance: 5,\n    tags: []\n  })\n\n  useEffect(() => {\n    if (runs.length) {\n      setCurRun(runs[0])\n      setRunIndex(0)\n    }\n  }, [runs])\n\n  const navigate = useNavigate();\n\n  const navigateToCreate = () => {\n    navigate('/create');\n  }\n\n  const navigateToFind = () => {\n    navigate('/find');\n  }\n\n  const tagsRef = useRef()\n\n  const validate = () => {\n    return query.maxDistance !== 0 && !isNaN(query.maxDistance) && !isNaN(query.minDistance) && query.tags.length > 0\n  }\n\n  async function search() {\n    if (validate()) {\n      setLoading(true)\n      await searchAPI(query)\n        .then(res => {\n          setLoading(false)\n          setRuns(res.data)\n          //setFindText(`Found ${res.data.length} runs`)\n        })\n        .catch(err => {\n          setFindText('Error Finding Run: ' + err.message)\n          setLoading(false)\n        })\n    } else {\n      // TODO prompt why not seqarchable\n      setFindText('Please input distances and tags before searching')\n    }\n  }\n\n  const updateTags = (tags) => {\n    let tmp = query\n    tmp.tags = tags\n    setQuery(tmp)\n  }\n\n  const changeRun = (next) => {\n    if (next) {\n      if (runIndex < runs.length - 1) {\n\n        setRunIndex(runIndex + 1)\n        console.log(\"nextRun\");\n        setCurRun(runs[runIndex + 1])\n\n      } else {\n        setRunIndex(0)\n        setCurRun(runs[0])\n      }\n    } else {\n      if (runIndex > 0) {\n        setRunIndex(runIndex - 1)\n        setCurRun(runs[runIndex - 1])\n      } else {\n        setRunIndex(runs.length - 1)\n        setCurRun(runs[runs.length - 1])\n      }\n    }\n    console.log(runIndex);\n    //setCurRun(runs[runIndex + 1])\n  }\n\n  // const handleChange = event => {\n  //   const result = event.target.value\n\n  //   if (!result || result.match(/^\\d{1,}(\\.\\d{0,4})?$/)) {\n  //     let tmp = query\n  //     tmp.distance = parseFloat(result)\n  //     setQuery(tmp)\n  //   } else {\n  //     // TODO prompt user to input numbers only\n  //   }\n  // };\n  return (\n\n\n    <div className='main-wrapper'>\n      <div className='white-background'>\n        <div className='find-header'>\n          <h1 id=\"lets-find\">FIND A RUN</h1>\n        </div>\n        <div className='row'>\n          <div className=\"column-find left-find\">\n\n\n\n            <div className='returned-runs'>\n              {loading ?\n                <LoadingAnimation />\n                :\n                <RunDescription\n                  description={curRun}\n                />\n              }\n            </div>\n\n            <div className='zero'>\n              {runs.length &&\n                <div className='run-arrows'>\n\n                  <IconButton id=\"back\" aria-label=\"delete\" enabled={runs.length} onClick={() => changeRun(false)}>\n                    <ArrowBack />\n                  </IconButton>\n                  <p id=\"run-info\"> [ Showing run {runIndex + 1} of {runs.length} ] </p>\n                  <IconButton id=\"next\" aria-label=\"delete\" enabled={runs.length} onClick={() => changeRun(true)}>\n                    <ArrowForward />\n                  </IconButton>\n\n                </div>\n              }\n            </div>\n          </div>\n          <div className=\"column-find right-find\">\n            <div className='navButtons-find'>\n              <button id=\"create-find\" onClick={navigateToCreate}>\n                <Create />Create A Run\n              </button>\n              <button id=\"find-find\" onClick={navigateToFind}>\n                <Search />Find A Run\n              </button>\n            </div>\n            <div className='dropdown'>\n              <Dropdown\n                ref={tagsRef} updateTags={updateTags}\n              />\n            </div>\n\n            <div className='slider'>\n              <MultiRangeSlider\n                min={0}\n                max={30}\n                onChange={({ min, max }) => {\n                  let tmp = query;\n                  tmp.minDistance = parseFloat(min);\n                  tmp.maxDistance = parseFloat(max);\n                  setQuery(tmp);\n                  //console.log(query);\n                }} />\n\n            </div>\n\n            <div className='search'>\n              <button id='search-button'\n                onClick={search}\n              ><Search />Search\n              </button>\n            </div>\n            <div className='error'>\n              <h1 disabled={!searchable} id=\"findErrText\">{runFindError}</h1>\n            </div>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n\n          </div>\n\n        </div>\n      </div>\n      <div className=\"hidden-when-big-find\">\n        {/*           HEADER DIV             */}\n        <div className=\"find-header-hidden\">\n          <h1 className='lets-find-hidden'>Find Your Run</h1>\n          {/* <h1 className='start-tracing'>Click anywhere on the map to start tracing your route.</h1> */}\n        </div>\n\n        {/*            NAVBUTTONS DIV          */}\n        <div className='navButtons-hidden-find'>\n          <button id=\"create-hidden-find\" onClick={navigateToCreate}><Create /> Create A Run</button>\n          <button id=\"find-hidden-find\" onClick={navigateToFind}><Search /> Find A Run</button>\n        </div>\n\n\n\n        {/*             DROPDOWN COMPONENT         */}\n        <div className='dropdown-hidden-find'>\n          <Dropdown\n            ref={tagsRef} updateTags={updateTags}\n          />\n        </div>\n\n        {/*           Distance Slider          */}\n        <div className='slider-hidden'>\n          <MultiRangeSlider\n            min={0}\n            max={30}\n            onChange={({ min, max }) => {\n              let tmp = query;\n              tmp.minDistance = parseFloat(min);\n              tmp.maxDistance = parseFloat(max);\n              setQuery(tmp);\n              //console.log(query);\n            }} />\n\n        </div>\n        {/*           ERROR MESSAGES          */}\n        <div className='error-msg-find'>\n          <h1 id=\"routeErrText-hidden-find\">{runFindError}</h1>\n        </div>\n\n        {/* search */}\n        <div className=\"search-hidden\">\n          <button className=\"search-button-hidden\" onClick={search}> Search</button>\n        </div>\n        <div className='zero-hidden'>\n              {runs.length &&\n                <div className='run-arrows-hidden'>\n\n                  <IconButton id=\"back-hidden\"  enabled={runs.length} onClick={() => changeRun(false)}>\n                    <ArrowBack />\n                  </IconButton>\n                  <p id=\"run-info-hidden\"> [ Showing run {runIndex + 1} of {runs.length} ] </p>\n                  <IconButton id=\"next-hidden\"  enabled={runs.length} onClick={() => changeRun(true)}>\n                    <ArrowForward />\n                  </IconButton>\n\n                </div>\n              }\n            </div>\n        <div className='returned-runs-hidden'>\n          {loading ?\n            <LoadingAnimation />\n            :\n            <RunDescription\n              description={curRun}\n            />\n          } \n        </div>\n   <br></br>\n\n      </div>\n    </div >\n\n  );\n};\n\nexport default FindARun;","import React from 'react'\n// //import { Link } from \"react-router-dom\";\nimport './calendar.css';\n\nconst Calendar = () => {\n    return (\n      <div>\n        <div className= \"calendar\">\n        <iframe src =\"https://calendar.google.com/calendar/embed?height=600&wkst=1&bgcolor=%23ffffff&ctz=America%2FChicago&showTitle=1&showPrint=0&showTabs=0&showCalendars=0&showTz=0&showDate=1&showNav=1&title=Run%20Club%20Events&src=dnVydW5jbHViYXBwbGljYXRpb25AZ21haWwuY29t&src=MjY0MGJlOWJjZDM5YmRjYjgxNDZhMTUwOGEyZDFmNGY3MGQxYzgxMzQ1ZDBkZDlhOTkzOWRmMmRjYmZmNTg2Y0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t&src=ZW4udXNhI2hvbGlkYXlAZ3JvdXAudi5jYWxlbmRhci5nb29nbGUuY29t&color=%23039BE5&color=%237986CB&color=%230B8043\"  width=\"900\" height=\"700\" frameborder=\"0\" scrolling=\"no\">\n            </iframe>\n      </div>\n    </div>\n  \n    );\n  };\n    \n  export default Calendar;\n\n// import { useState } from 'react';\n// import Calendar from 'react-calendar';\n// import './calendar.css';\n\n// const Schedule = () => {\n//  // Array to store month string values\n//  const allMonthValues = [\n//   \"January\",\n//   \"February\",\n//   \"March\",\n//   \"April\",\n//   \"May\",\n//   \"June\",\n//   \"July\",\n//   \"August\",\n//   \"September\",\n//   \"October\",\n//   \"November\",\n//   \"December\"\n// ];\n\n// // State for date selected by user\n// const [selectedDate, setSelectedDate] = useState();\n\n// // State for text above calander\n// const [calendarText, setCalendarText] = useState(`No Date is selected`);\n\n// // Function to update selected date and calander text\n// const handleDateChange = (value) => {\n//   setSelectedDate(value);\n//   setCalendarText(`The selected Date is ${value.toDateString()}`);\n// };\n\n// // Function to handle selected Year change\n// const handleYearChange = (value) => {\n//   const yearValue = value.getFullYear();\n//   setCalendarText(`${yearValue} Year  is selected`);\n// };\n\n// // Function to handle selected Month change\n// const handleMonthChange = (value) => {\n//   const monthValue = allMonthValues[value.getMonth()];\n//   setCalendarText(`${monthValue} Month  is selected`);\n// };\n\n// return (\n//   <div className=\"app\">\n//     <h2 className=\"calander-details\">{calendarText}</h2>\n//     <Calendar\n//       onClickMonth={handleMonthChange}\n//       onClickYear={handleYearChange}\n//       onChange={handleDateChange}\n//       value={selectedDate}\n//     />\n//   </div>\n// );\n// }\n\n// export default Schedule;\n","import {api as axios} from '../utils/axios'\n\nexport async function getAdmins() {\n    return await axios({\n        method: \"GET\",\n        url: \"/admin/\"\n    })\n}\n\nexport async function grantAdmin(email) {\n    return await axios({\n        method: \"PUT\",\n        url: \"/admin/grant\",\n        data: {email: email}\n    })\n}\n\nexport async function revokeAdmin(email) {\n    return await axios({\n        method: \"PUT\",\n        url: \"/admin/revoke\",\n        data: {email: email}\n    })\n}","import { Button, Dialog, DialogActions, DialogTitle, TextField, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { getAdmins, grantAdmin, revokeAdmin } from \"../../api/admin\";\n\nconst AdminPopup = ({message, open, handleClose}) => {\n    const [admins, setAdmins] = useState([])\n    const [femail, setfemail] = useState()\n\n    useEffect(() => {\n        getAdmins().then(\n            res => {\n                setAdmins(res.data.map(x => x.email))\n            }\n        )\n    }, [])\n\n    const handleGrant = () => {\n        grantAdmin(femail)\n    }\n\n    const handleRevoke = () => {\n        revokeAdmin(femail)\n    }\n\n    return(\n        <div className='new-bio-popup'>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{message}</DialogTitle>\n            <Typography type='h4'>Current Administrators:</Typography>\n            {admins.map(email => \n                <Typography key={email} type='h5'>{email}</Typography>\n            )}\n            <DialogActions>\n                <form onSubmit={handleGrant}>\n                <input type='text' name='grant' placeholder='email' onChange={e => setfemail(e.target.value)}/>\n                <Button type='Submit'>Grant</Button>\n                </form>\n                <form onSubmit={handleRevoke}>\n                <input type='text' name='revoke' placeholder='email' onChange={e => setfemail(e.target.value)}/>\n                <Button type='Submit'>Revoke</Button>\n                </form>\n            </DialogActions>\n          </Dialog>\n        </div>\n      )\n}\n\nexport default AdminPopup;","import React, {useContext, useState} from \"react\";\n// import {Nav, Navbar, NavLink } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n// import'../styles/index.css';\nimport '../NavBar-component/navbar.css';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport AdminPopup from \"./AdminPopup\";\nimport { UserContext } from \"../../App\";\n\n\nconst NavBar = ({handleClick}) => {\n  const {user} = useContext(UserContext)\n\n  const [showLinks, setShowLinks] = useState(false);\n  const [openPopup, setOpenPopup] = useState(false)\n\n  return (\n    <div className = \"navbar\">\n      <div className=\"left-side\">\n        <a href=\"/\">VANDERBILT RUN CLUB</a> \n      </div>\n      <div className=\"right-side\">\n        <div className = \"text\" id={showLinks ? \"hidden\" : \"\"}>\n          <a href=\"/meettheteam\">MEET THE TEAM</a>\n          <a href=\"/find\">FIND YOUR RUN</a>\n          <a href=\"/links\">LINKS</a>\n          {user.role === 'admin' && \n            <Button onClick={() => setOpenPopup(true)}>Admin</Button>\n          }\n          <Button onClick={handleClick}>Logout</Button>\n          \n        </div>\n        <div className = \"dropdown-button\">\n          <Button onClick={()=> setShowLinks(!showLinks)}>Menu<KeyboardArrowDown /></Button>\n        </div>\n      </div>\n      <div className=\"admin-button\">\n        {user.role === 'admin' &&\n        <AdminPopup \n          message={'Admin Info'}\n          open={openPopup}\n          handleClose={() => {setOpenPopup(false)}}\n        />\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default NavBar\n\n","import React, {createContext, useEffect, useState}  from 'react'\nimport {Routes , Navigate, Route} from 'react-router-dom'\nimport { useCookies } from 'react-cookie';\n\nimport HomePage from './pages/home'\nimport Auth from './pages/Auth/Auth'\nimport Links from './pages/Links/links'\nimport FindYourRun from './pages/FindYourRun/findyourrun.js';\nimport MeetTheTeam from './pages/MeetTheTeam/meetTheTeam.js';\nimport CreateARun from './pages/Create/create.js';\nimport FindARun from './pages/Find/find.js';\nimport Calendar from './pages/Calendar/calendar';\n\nimport PopUpDialog from './components/popup-dialog/popup-dialog';\nimport LoadingAnimation from './components/loading-animation/loading-animation';\n// import Logout from './components/logout-component/logout';\n\nimport {user as tokenLogin, exp} from './api/auth'\nimport NavBar from './components/NavBar-component/NavBar';\n\n// import Create from './components/create';\n// import FindARun from './components/find.js';\n// import CreateARun from './components/create.js';\n\nexport const UserContext = createContext(null)\nexport const CookieContext = createContext(null)\n\nexport default function App() {\n  const [user, setUser] = useState(null)\n  const [cookies, setCookie, removeCookie] = useCookies(['name'])\n  const [openDialog, setOpenDialog]   = useState(false)\n  const [loading, setLoading]         = useState(true)\n  \n  useEffect(() => {\n    // fetch user information if token still stored in cookies\n    async function auth(){\n      await tokenLogin()\n        .then(resUser => setUser(resUser.data))\n        .catch(err => console.log(\"ERROR: \", err.json))    \n      setLoading(false)\n    }\n    auth()\n  }, [])\n\n  useEffect(()=>{\n    async function timeout(){\n      await exp()\n        .then(res => {\n          setTimeout(() => setOpenDialog(true), res.data.exp*1000 + 1000)})\n        .catch(err => console.log(err))\n    }\n    timeout()\n  }, [user])\n\n  // useEffect(() => {\n  //   async function logout(){\n  //     setUser(null);\n  //     setOpenDialog(false);\n  //   }\n  //   logout()\n  // }, [user])\n\n  function logout() {\n    removeCookie('token')\n    setUser(null)\n    setOpenDialog(false)\n  }\n\n  return (\n    <div className='App'>\n      <CookieContext.Provider value={{cookies, setCookie}}>\n      <UserContext.Provider value={{user, setUser}}>\n        { loading ? \n          <LoadingAnimation /> :\n          <>\n          <div className='main-wrapper'>\n          { user &&\n            <NavBar handleClick={logout} />\n          }\n          </div>\n          <Routes>\n            <Route exact path=\"/auth\" element={<Auth />}></Route>\n            <Route exact path=\"/\" element={user ? <HomePage /> : <Navigate to=\"/auth\" />}></Route>\n            <Route exact path=\"/links\" element={user ? <Links /> : <Navigate to=\"/auth\" />}></Route>\n            <Route exact path=\"/findyourrun\" element={user ? <FindYourRun /> : <Navigate to=\"/auth\" />}></Route>\n            <Route exact path=\"/meettheteam\" element={user ? <MeetTheTeam /> : <Navigate to=\"/auth\" />}></Route>\n            <Route exact path=\"/createarun\" element={user ? <CreateARun /> : <Navigate to=\"/auth\" />}></Route>\n            <Route exact path=\"/findarun\" element={user ? <FindARun /> : <Navigate to=\"/auth\" />}></Route>\n            <Route exact path=\"/calendar\" element={user ? <Calendar /> : <Navigate to=\"/auth\" />}></Route>\n            <Route exact path=\"/create\" element={user ? <CreateARun /> : <Navigate to=\"/auth\" />}></Route>\n            <Route exact path=\"/find\" element={user ? <FindARun /> : <Navigate to=\"/auth\" />}></Route>\n          </Routes>\n          </>\n        }\n        <PopUpDialog\n          message={`Session Expired. Please log back in.`} \n          open={openDialog}\n          handleClose={logout}\n        />\n      </UserContext.Provider>\n      </CookieContext.Provider>\n    </div>\n  )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {GoogleOAuthProvider} from \"@react-oauth/google\"\nimport { CookiesProvider } from 'react-cookie' \nimport CssBaseline from '@mui/material/CssBaseline'\nimport '@fontsource/roboto'\nimport './styles/index.css'\n\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n      <GoogleOAuthProvider clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}>\n      <CookiesProvider>\n        <CssBaseline />\n        <App />\n      </CookiesProvider>\n      </GoogleOAuthProvider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}